<?php

mb_internal_encoding('UTF-8');
date_default_timezone_set(isset($__context['timezone']) ? $__context['timezone'] : 'Asia/Taipei');

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///// DEBUGGING /////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

if(!isset($is_debugging) || $is_debugging == true)  {
	ini_set('display_errors', 'On');
	error_reporting(E_ALL);
}

function ___rt($obj) {
	if(is_string($obj))
		$string = $obj;
	else if(is_bool($obj))
		$string = ($obj ? 'true' : 'false');
	else
		$string = print_r($obj, true);
	
	$string = htmlspecialchars($string);
	
	if(strpos($string, '///') !== false) {
		$temp = explode('///', $string);
		$string = '<tr><td><pre>' . implode('</pre></td><td><pre>', $temp) . '</pre></td></tr>' . "\n";
	}
	else
		$string = '<pre>' . $string . '</pre>' . "\n";
		
	return $string;
}

function ___($obj) {	
	echo(___rt($obj));
	
	@ob_flush();
	@flush();
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///// SERIALIZATION /////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

function encode($obj) {
	return base64_encode(serialize($obj));
}

function decode($string) {
	return unserialize(trim(base64_decode($string)));
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///// STRING VALIDATION /////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

function _str_is_latin($string) {
//	return (preg_match('/[^A-Za-z\x{00C0}-\x{024F}\x{0400}-\x{A69F}]/', $string) == 0);
	return (preg_match('/[^A-Za-z\x{00C0}-\x{024F}]/u', $string) == 0);
}
function _str_is_literal_numerical($string) {
	return !preg_match('/[^a-zA-Z0-9]/i', $string);
}
function _str_is_literal($string) {
	return !preg_match('/[^a-zA-Z_]/i', $string);
}
function _str_is_pos_int($string) {
	return !preg_match('/[^0-9]/i', $string);
}
function _str_is_date($string) {
	return !preg_match('/[0-9]+\/[0-9]+\/[0-9]+/i', $string);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///// LIBRARIES /////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//include_once('lib-db.php');

?>